# Generated by Django 3.2.8 on 2021-10-22 12:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Text')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Comment of post',
                'verbose_name_plural': 'Comments of post',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('text', models.TextField(verbose_name='Text')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Date and time of creation')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='Publication date and time')),
                ('post_type', models.CharField(choices=[('news', 'News'), ('article', 'Article')], max_length=50, verbose_name='Post type')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
            },
        ),
        migrations.CreateModel(
            name='VotePost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote_type', models.CharField(blank=True, choices=[('upvote', 'Upvote'), ('downvote', 'Downvote')], max_length=50, verbose_name='Vote type')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='posts.post', verbose_name='News')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts_votepost_related', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Voting for post',
                'verbose_name_plural': 'Votings for post',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VoteComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote_type', models.CharField(blank=True, choices=[('upvote', 'Upvote'), ('downvote', 'Downvote')], max_length=50, verbose_name='Vote type')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='posts.comment', verbose_name='Comment of news')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts_votecomment_related', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Voting for comment',
                'verbose_name_plural': 'Votings for comments',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='posts.post', verbose_name='Post'),
        ),
        migrations.AddConstraint(
            model_name='votepost',
            constraint=models.UniqueConstraint(fields=('post', 'user'), name='posts_votepost_check_unique'),
        ),
        migrations.AddConstraint(
            model_name='votecomment',
            constraint=models.UniqueConstraint(fields=('comment', 'user'), name='posts_votecomment_check_unique'),
        ),
    ]
